h1. SelectiveProtection

h2. Overview

While attr_proctected and attr_accessible are great for securing your Rails app, in some cases a bit more flexibility is desired. SelectiveProtection enables you to selectively allow mass assignment of normally protected attributes.


h2. Usage

h3. Example Classes

_Note that no special setup is required_

<pre><code>
  class BlacklistProtected < ActiveRecord::Base
    attr_accessor :dangerous, :safe
    attr_protected :dangerous
  end
  
  class WhitelistProtected < ActiveRecord::Base
    attr_accessor :dangerous, :safe
    attr_accessible :safe
  end
</code></pre>

  
h3. Standard behavior is maintained

<pre><code>
  bp = BlacklistProtected.new(:dangerous => "dangerous")
  bp.dangerous # => nil

  wp = WhitelistProtected.new(:dangerous => "dangerous")
  wp.dangerous # => nil
</code></pre>


h3. Proxy Form
<pre><code>
  bp = BlacklistProtected.with_accessible(:dangerous).new(:dangerous => "dangerous")
  bp.dangerous # => "dangerous"

  wp = WhitelistProtected.with_accessible(:dangerous).new(:dangerous => "dangerous")
  wp.dangerous # => "dangerous"
</code></pre>

  
h3. Block Form

<pre><code>
  BlacklistProtected.with_accessible(:dangerous) do
    bp = BlacklistProtected.new(:dangerous => "dangerous")
    bp.dangerous # => "dangerous"
  end
  
  WhitelistProtected.with_accessible(:dangerous) do
    wp = WhitelistProtected.new(:dangerous => "dangerous")
    wp.dangerous # => "dangerous"
  end
</code></pre>